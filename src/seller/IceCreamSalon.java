package seller;

import eatables.Cone;
import eatables.Cone.Flavor;
import eatables.IceRocket;
import eatables.Magnum;
import eatables.Magnum.MagnumType;

public class IceCreamSalon implements IceCreamSeller {

	private PriceList priceList;

	private double profit = 0;



	/**

	 * Constructor with one parameter

	 * 

	 * @param priceList

	 */

	public IceCreamSalon(PriceList priceList) {

		this.priceList = priceList;

	}



	/**

	 * Returns the profit generated by the selling of ice creams

	 */

	@Override

	public double getProfit() {



		return profit;

	}



	/**

	 * create a new cone with all the flavors asked

	 */



	@Override

	public Cone orderCone(Flavor[] flavors) {

		Cone orderedCone = new Cone(flavors);

		this.profit += (priceList.getBallPrice() * flavors.length);

		return orderedCone;

	}



	/**

	 * create a new IceRocket

	 */





	/**

	 * create Magnum from a specific magnumType

	 */




	@Override

	public String toString() {

		return "IceCreamSalon [priceList=" + priceList + ", totalProfit=" + profit + "]";

	}



	@Override
	public IceRocket orderIceRocket() {
		IceRocket iceRocket = new IceRocket();

		this.profit += priceList.getRocketPrice();

		return iceRocket;
	}



	@Override
	public Magnum orderMagnum(MagnumType magnumType) {
		Magnum orderedMagnum = new Magnum(magnumType);

		this.profit += priceList.getMagnumPrice(magnumType);

		return orderedMagnum;
	}

}
